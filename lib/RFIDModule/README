# RFIDModule Library

## Description
The RFIDModule component provides an interface for reading RFID cards and tags using the MFRC522 module. This allows your microcontroller to detect, read, and process unique IDs from RFID cards, making it ideal for access control, identification, and automation projects.

## What it does
- Initializes and configures the MFRC522 RFID reader
- Detects when a new RFID card is present
- Reads the unique ID (UID) from RFID cards or tags
- Provides a simple API for integrating RFID functionality into your code

## How to use
1. **Wiring:**
   - Connect the MFRC522 module's SDA, SCK, MOSI, MISO, RST, VCC, and GND pins to your microcontroller as follows:
     - SDA  → Digital pin (e.g., D10)
     - SCK  → SCK (e.g., D13)
     - MOSI → MOSI (e.g., D11)
     - MISO → MISO (e.g., D12)
     - RST  → Digital pin (e.g., D9)
     - VCC  → 3.3V
     - GND  → GND

   ```mermaid
   graph TD
     R[MFRC522 RFID Module] --SDA--> M[Microcontroller (e.g., D10)]
     R --SCK--> S[SCK (D13)]
     R --MOSI--> O[MOSI (D11)]
     R --MISO--> I[MISO (D12)]
     R --RST--> X[RST (D9)]
     R --VCC--> V[3.3V]
     R --GND--> G[Ground]
   ```

2. **Code Example:**
   ```cpp
   #include <RFIDModule.h>
   
   RFIDModule rfid(10, 9); // SDA to D10, RST to D9
   
   void setup() {
       Serial.begin(9600);
       rfid.begin();
   }
   
   void loop() {
       String uid;
       if (rfid.readCardUID(uid)) {
           Serial.print("Card UID: ");
           Serial.println(uid);
       }
   }
   ```
3. **API:**
   - `RFIDModule(uint8_t ssPin, uint8_t rstPin)`: Constructor, specify the SDA (SS) and RST pins.
   - `void begin()`: Initialize the RFID module and SPI communication.
   - `bool isCardPresent()`: Returns true if a new card is present.
   - `bool readCardUID(String &uid)`: Reads the UID of a card and stores it in the provided string.

## Files
- RFIDModule.h: Header file for the RFIDModule class
- RFIDModule.cpp: Implementation file for the RFIDModule class

## Dependencies
- MFRC522 library (install via PlatformIO or Arduino Library Manager)
